@page "/Forklift"
@using Blazor_FrontEnd.Data;
@using Blazor_FrontEnd.Data.RequestCodes;
@inject IPCClient backendComm

<h1>Heftruck status</h1>
<hr />
<br />
<h3>Batterijniveau</h3> 
<label for="batteryGauge">Resterende lading ( @percentage %): </label>
<meter style="width:80%;" id="batteryGauge" min="0" max="100" value="@percentage"></meter>

<hr />

<h3>Handrem</h3>
<br />
@if (handbrakeActivated)
{
    <p style="color:forestgreen">Handrem geactiveerd</p>
} else
{
    <p style="color:firebrick">Handrem gedeactiveerd</p>
}

<br />
<label for="handbrakeToggle">Handrem: </label>
<input type="checkbox" data-toggle="toggle" data-on="aan" data-off="uit" data-onstyle="success" data-offstyle="danger">
<hr />



@code {
    private float percentage;
    private bool handbrakeActivated = false;
    private string? handbrakeStatus = null;
    private string? batteryPercentage = null;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        backendComm.StartSynchronous();
        handbrakeStatus = await backendComm.SendCode(RequestCodes.GetHandbrakeStatus);
        batteryPercentage = await backendComm.SendCode(RequestCodes.GetBatteryPercentage);
    }

}
