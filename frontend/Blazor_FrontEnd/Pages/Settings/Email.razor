@page "/settings/email"

@using System.ComponentModel.DataAnnotations;
@using Blazor_FrontEnd.Data;

@inject EmailsService emailService;

<h3>Email adressen</h3>

<table class="table">
    <thead>
        <tr>
            <th>Emails</th>
        </tr>
    </thead>
    <tbody>
        @if(Emails.Item1 is null)
        {
            <tr>
                <td><h5 style="color:firebrick">LOADING...</h5></td>
            </tr>
        }else if (parsedEmails.Count > 0)
        {
      
            @foreach (var addr in parsedEmails)
            {
                <tr>
                    <td>@addr</td>
                    <td>remove</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td><h5 style="color:firebrick">@Emails.Item2</h5></td>
            </tr>
        }

    </tbody>
</table>
<br />
@if(Emails.Item1 is not null)
{
    <form @onsubmit=@AddToTable>
    <label for="emailInput"> Voeg een email toe</label>
    <input @bind="addedEmail" id="emailInput" />
    </form>
}


<br />
<hr />


@code {
    private string? addedEmail;
    private (List<string>, string?) Emails;
    private List<string> parsedEmails = new List<string>();

    private async Task AddToTable()
    {
        if (!String.IsNullOrWhiteSpace(addedEmail) && !Emails.Item1.Contains(addedEmail))    //  check for doubles and empty/null strings
        {
            if (new EmailAddressAttribute().IsValid(addedEmail)) //  validate email
            {
                Emails.Item1.Add(addedEmail);
                string? TaskResult = await Task.Run(() => emailService.UpdateEmails(Emails.Item1));
                if(TaskResult is not null)
                {
                    Console.WriteLine($"failed on save {TaskResult}");
                }

            }
        }
        addedEmail = null;
    }

    //  on initialized page
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Emails = await Task.Run(() => emailService.GetStoredEmails());
        System.Diagnostics.Debug.Assert(Emails.Item1.Count == 0);
        parsedEmails = Emails.Item1;

    }
    
}
